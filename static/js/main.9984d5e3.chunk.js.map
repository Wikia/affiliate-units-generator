{"version":3,"sources":["models/User.ts","components/Menu.tsx","store/user/types.ts","store/user/actions.ts","models/AffiliateUnit.ts","store/units/types.ts","components/JsonValidator.tsx","components/JsonView.tsx","store/units/actions.ts","components/TableViewImage.tsx","components/TableViewDetails.tsx","components/TableViewFeatures.tsx","components/EditUnitForm.tsx","components/EditUnitModal.tsx","components/TableViewActions.tsx","components/TableView.tsx","components/App.tsx","store/units/reducer.ts","store/user/reducer.ts","store/store.ts","serviceWorker.js","index.tsx"],"names":["Mode","MenuKey","initialState","mode","JSON","this","TABLE","User","empty","MODE_CHANGE","setJsonMode","type","payload","setTableMode","connect","state","currentMode","user","isTableMode","dispatch","doSwitchMode","theme","selectedKeys","style","lineHeight","onClick","e","key","Item","AffiliateUnit","campaign","category","image","heading","subheading","link","isBig","tagline","isExternal","launchOn","priority","disableOnSearch","disableOnPage","country","preferredIndex","onlyOnAndroid","onlyOnIOS","u","unit","Array","isArray","isValid","undefined","UNIT_UPDATE","UNIT_ADD","UNIT_REMOVE","LOAD_UNITS","ValidationState","IsValidJson","json","parse","JsonValidator","React","useState","UNDEFINED","validationState","setValidationState","useEffect","OK","ERROR","padding","TextArea","baseJson","stringify","units","doLoad","loadUnits","length","setJson","SubmitButton","preventDefault","disabled","icon","ghost","title","subTitle","layout","required","className","rows","value","onChange","target","autoFocus","autoSize","TableViewImage","styled","img","Subheading","div","Link","Tagline","Heading","TableViewDetails","placement","Countries","IconWithTooltip","color","tooltip","fontSize","margin","findCountry","code","countries","find","Code","Name","TableViewFeatures","map","c","Option","EditForm","create","name","form","doCloseModal","doSave","getFieldDecorator","getFieldError","isFieldTouched","tailFormItemLayout","wrapperCol","xs","span","offset","sm","campaignError","categoryError","imageError","headingError","subheadingError","linkError","labelCol","onSubmit","validateFieldsAndScroll","err","values","message","error","newUnit","load","format","label","validateStatus","help","initialValue","rules","valuePropName","placeholder","moment","utc","showTime","min","max","htmlType","index","success","unitUpdate","unitAdd","EditUnitModal","onClose","currentUnit","AffiliateUnitWithKey","visible","footer","onCancel","doRemove","unitRemove","showModal","setShowModal","Fragment","Group","shape","onConfirm","okText","cancelText","doExport","data","columns","render","text","record","width","src","alt","extra","dataSource","pagination","Header","Content","Menu","background","minHeight","isJsonMode","unitsReducer","action","newState","slice","push","splice","filter","Boolean","loadStoreFromJson","userReducer","Object","assign","combinedReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9984d5e3.chunk.js","sourcesContent":["export enum Mode {\n  JSON = \"json\",\n  TABLE = \"table\",\n};\n\n// User Interface\nclass User {\n\n  mode: Mode = Mode.JSON;\n\n  static empty(): User {\n    return new User();\n  }\n\n  setJsonMode(): void {\n    this.mode = Mode.JSON;\n  }\n\n  isJsonMode(): boolean {\n    return this.mode === Mode.JSON;\n  }\n  setTableMode(): void {\n    this.mode = Mode.TABLE;\n  }\n\n  isTableMode(): boolean {\n    return this.mode === Mode.TABLE;\n  }\n}\n\nexport default User;\n","import React from \"react\";\nimport { Menu } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport { AppState } from \"../store/store\";\nimport { setJsonMode, setTableMode } from \"../store/user/actions\";\n\nenum MenuKey {\n  JSON = 'json',\n  TABLE = 'table',\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  currentMode: state.user.isTableMode() ? MenuKey.TABLE : MenuKey.JSON,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  doSwitchMode: (mode: string) => {\n    if (mode === MenuKey.TABLE) {\n      dispatch(setTableMode());\n    } else {\n      dispatch(setJsonMode());\n    }\n  },\n});\n\ntype Props = {\n  currentMode: string;\n  doSwitchMode: (mode: string) => void;\n};\n\nfunction AppMenu({ currentMode, doSwitchMode }: Props) {\n  return (\n    <Menu\n      theme=\"dark\"\n      mode=\"horizontal\"\n      selectedKeys={[currentMode]}\n      style={{ lineHeight: \"64px\" }}\n      onClick={e => doSwitchMode(e.key)}\n    >\n      <Menu.Item key={MenuKey.JSON}>JSON</Menu.Item>\n      <Menu.Item key={MenuKey.TABLE}>Table</Menu.Item>\n    </Menu>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppMenu);\n","import User, { Mode } from \"../../models/User\";\n\nexport type UserStore = User;\nexport const initialState: UserStore = User.empty();\n\nexport const MODE_CHANGE = 'MODE_CHANGE';\n\n// Keep in sync\nexport type UserActions =\n  ModeChangeAction;\n\n// Actions:\nexport type ModeChangeAction = {\n  type: typeof MODE_CHANGE;\n  payload: {\n    mode: Mode,\n  },\n};\n","import { Mode } from \"../../models/User\";\n\nimport {\n  MODE_CHANGE,\n  ModeChangeAction,\n} from './types';\n\nexport function setJsonMode(): ModeChangeAction {\n  return {\n    type: MODE_CHANGE,\n    payload: {\n      mode: Mode.JSON,\n    },\n  };\n}\nexport function setTableMode(): ModeChangeAction {\n  return {\n    type: MODE_CHANGE,\n    payload: {\n      mode: Mode.TABLE,\n    },\n  };\n}\n","import { Optional } from \"../types\";\n\nclass AffiliateUnit {\n  campaign: string = '';\n  category: string = '';\n  image: string = '';\n  heading: string = '';\n  subheading: string = '';\n  link: string = '';\n  isBig?: boolean;\n  tagline?: string;\n  isExternal?: boolean;\n  launchOn?: string;\n\n  priority: number = 1;\n  disableOnSearch: boolean = false;\n  disableOnPage: boolean = false;\n  country?: string[];\n  preferredIndex?: number = 0;\n  onlyOnAndroid: boolean = false;\n  onlyOnIOS: boolean = false;\n\n  isValid(): boolean {\n    return !!this.category && !!this.campaign && !!this.image && !!this.heading && !!this.subheading && !!this.link;\n  }\n\n  static empty(): AffiliateUnit {\n    return new AffiliateUnit();\n  }\n\n  static load(u: any): Optional<AffiliateUnit> {\n    const unit = AffiliateUnit.empty();\n\n    if (typeof u.campaign === 'string') unit.campaign = u.campaign;\n    if (typeof u.category === 'string') unit.category = u.category;\n    if (typeof u.image === 'string') unit.image = u.image;\n    if (typeof u.heading === 'string') unit.heading = u.heading;\n    if (typeof u.subheading === 'string') unit.subheading = u.subheading;\n    if (typeof u.link === 'string') unit.link = u.link;\n    if (typeof u.isBig !==  'undefined') unit.isBig = !!u.isBig;\n    if (typeof u.tagline === 'string') unit.tagline = u.tagline;\n    if (typeof u.isExternal !== 'undefined') unit.isExternal = !!u.isExternal;\n    if (typeof u.launchOn === 'string') unit.launchOn = u.launchOn;\n    if (typeof u.priority === 'number') unit.priority = u.priority;\n    if (typeof u.disableOnSearch !== 'undefined') unit.disableOnSearch = !!u.disableOnSearch;\n    if (typeof u.disableOnPage !== 'undefined') unit.disableOnPage = !!u.disableOnPage;\n    if (Array.isArray(u.country)) unit.country = u.country;\n    if (typeof u.preferredIndex === 'number') unit.preferredIndex = u.preferredIndex;\n    if (typeof u.onlyOnAndroid !== 'undefined') unit.onlyOnAndroid = !!u.onlyOnAndroid;\n    if (typeof u.onlyOnIOS !== 'undefined') unit.onlyOnIOS = !!u.onlyOnIOS;\n\n    // validate data\n    return unit.isValid() ? unit : undefined;\n  }\n}\n\nexport default AffiliateUnit;\n","import AffiliateUnit from \"../../models/AffiliateUnit\";\nexport type UnitsStore = AffiliateUnit[];\nexport const initialState: UnitsStore = [];\n\nexport function loadStoreFromJson(json: string): UnitsStore {\n  const data = JSON.parse(json);\n\n  if (!Array.isArray(data)) {\n    return initialState;\n  }\n\n  const potentialData = data.map(u => AffiliateUnit.load(u));\n  return potentialData.filter(Boolean) as AffiliateUnit[];\n}\n\nexport const UNIT_UPDATE = 'UNIT_UPDATE';\nexport const UNIT_ADD = 'UNIT_ADD';\nexport const UNIT_REMOVE = 'UNIT_REMOVE';\nexport const LOAD_UNITS = 'LOAD_UNITS'\n\n// Keep in sync\nexport type UnitsActions =\n  UnitUpdateAction |\n  UnitAddAction |\n  UnitRemoveAction |\n  LoadUnitsAction;\n\n// Actions:\nexport type UnitUpdateAction = {\n  type: typeof UNIT_UPDATE;\n  payload: {\n    index: number;\n    unit: AffiliateUnit;\n  }\n}\nexport type UnitAddAction = {\n  type: typeof UNIT_ADD;\n  payload: {\n    unit: AffiliateUnit;\n  }\n}\nexport type UnitRemoveAction = {\n  type: typeof UNIT_REMOVE;\n  payload: {\n    index: number;\n  }\n}\nexport type LoadUnitsAction = {\n  type: typeof LOAD_UNITS;\n  payload: {\n    json: string;\n  }\n}\n\n","import React from \"react\";\nimport { Icon } from \"antd\";\n\ntype Props = {\n  json: string,\n};\n\nenum ValidationState {\n  UNDEFINED,\n  OK,\n  ERROR,\n};\n\nexport function IsValidJson(json: string): boolean {\n    try {\n      JSON.parse(json);\n    } catch (e) {\n      return false;\n    }\n    return true;\n}\n\nfunction JsonValidator({ json }: Props) {\n  const [validationState, setValidationState] = React.useState<ValidationState>(ValidationState.UNDEFINED);\n\n  React.useEffect(() => {\n    if (!json) {\n      setValidationState(ValidationState.UNDEFINED);\n      return;\n    }\n    setValidationState(IsValidJson(json) ? ValidationState.OK : ValidationState.ERROR);\n  }, [json]);\n\n  switch (validationState) {\n    case ValidationState.OK:\n      return <Icon style={{ padding: \"0 20px\" }} type=\"check\" />;\n    case ValidationState.ERROR:\n      return <Icon style={{ padding: \"0 20px\" }} type=\"warning\" />;\n    default:\n      return null;\n  }\n}\n\nexport default JsonValidator;\n","import React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { PageHeader, Button, Form, Input } from \"antd\";\n\nimport { loadUnits } from \"../store/units/actions\";\nimport { setTableMode } from \"../store/user/actions\";\nimport { AppState } from \"../store/store\";\n\nimport JsonValidator, { IsValidJson } from \"./JsonValidator\";\n\nconst { TextArea } = Input;\n\ntype Props = {\n  baseJson?: string;\n  doLoad: (json: string) => void;\n};\n\nfunction JsonView({ baseJson, doLoad }: Props) {\n  const [json, setJson] = React.useState<string>(\n    (baseJson && baseJson.length && baseJson !== \"[]\") ? baseJson : ''\n  );\n\n  function onJsonChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n    setJson(e.target.value);\n  }\n\n  function onSubmit(e: React.FormEvent): void {\n    e.preventDefault();\n\n    doLoad(json);\n  }\n\n  const SubmitButton = (\n    <Form.Item>\n      <Button\n        type=\"primary\"\n        onClick={onSubmit}\n        disabled={!IsValidJson(json)}\n        icon=\"import\"\n      >\n        Load JSON\n      </Button>\n      <JsonValidator json={json} />\n    </Form.Item>\n  );\n\n  return (\n    <PageHeader\n      ghost={false}\n      title=\"JSON View\"\n      subTitle=\"Paste affiliated-units.json here\"\n    >\n      <Form layout=\"vertical\">\n        {SubmitButton}\n        <Form.Item required>\n          <TextArea\n            className=\"code\"\n            rows={10}\n            value={json}\n            onChange={onJsonChange}\n            autoFocus\n            autoSize\n          />\n        </Form.Item>\n        {SubmitButton}\n      </Form>\n    </PageHeader>\n  );\n}\n\nconst mapStateToProps = (state: AppState): Partial<Props> => ({\n  baseJson: JSON.stringify(state.units, null, 2),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  doLoad: (json: string) => {\n    dispatch(loadUnits(json));\n    dispatch(setTableMode());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JsonView);\n","import AffiliateUnit from '../../models/AffiliateUnit';\n\nimport {\n  UNIT_ADD,\n  UNIT_UPDATE,\n  UNIT_REMOVE,\n  LOAD_UNITS,\n  UnitAddAction,\n  UnitUpdateAction,\n  UnitRemoveAction,\n  LoadUnitsAction,\n} from './types';\n\nexport function unitAdd(unit: AffiliateUnit): UnitAddAction {\n  return {\n    type: UNIT_ADD,\n    payload: {\n      unit,\n    },\n  };\n}\n\nexport function unitUpdate(index: number, unit: AffiliateUnit): UnitUpdateAction {\n  return {\n    type: UNIT_UPDATE,\n    payload: {\n      index,\n      unit,\n    },\n  };\n}\n\nexport function unitRemove(index: number): UnitRemoveAction {\n  return {\n    type: UNIT_REMOVE,\n    payload: {\n      index,\n    },\n  };\n}\n\nexport function loadUnits(json: string): LoadUnitsAction {\n  return {\n    type: LOAD_UNITS,\n    payload: {\n      json,\n    },\n  };\n}\n","import styled from \"styled-components\";\n\nconst TableViewImage = styled.img`\n  height: 80px;\n  width: 80px;\n  object-fit: cover;\n`;\n\nexport default TableViewImage;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Tooltip } from \"antd\";\n\nimport { AffiliateUnitWithKey } from \"./TableView\";\n\ntype Props = {\n  unit: AffiliateUnitWithKey;\n};\n\nconst Subheading = styled.div`\n  font-size: 14px;\n`;\n\nconst Link = styled.div`\n  font-size: 14px;\n`;\n\nconst Tagline = styled.div`\n  font-size: 16px;\n  text-decoration: underline;\n`;\n\nconst Heading = styled.div`\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nfunction TableViewDetails({ unit }: Props) {\n  return (\n    <div>\n      {unit.tagline && (\n        <Tooltip placement=\"topLeft\" title=\"Tagline\">\n          <Tagline>{unit.tagline}</Tagline>\n        </Tooltip>\n      )}\n      <Tooltip placement=\"topLeft\" title=\"Heading\">\n        <Heading>{unit.heading}</Heading>\n      </Tooltip>\n      <Tooltip placement=\"topLeft\" title=\"Subheading\">\n        <Subheading>{unit.subheading}</Subheading>\n      </Tooltip>\n      <Tooltip placement=\"topLeft\" title=\"Link\">\n        <Link>{unit.link}</Link>\n      </Tooltip>\n    </div>\n  );\n}\n\nexport default TableViewDetails;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Tooltip, Icon, Tag } from \"antd\";\n\nimport { AffiliateUnitWithKey } from \"./TableView\";\nimport countries from './countries.json';\n\ntype Props = {\n  unit: AffiliateUnitWithKey;\n};\n\nconst Countries = styled.div`\n  margin-bottom: 10px;\n`;\n\ntype IconWithTooltipProps = {\n  type: string;\n  color: string;\n  tooltip: string;\n};\n\nfunction IconWithTooltip({ type, color, tooltip }: IconWithTooltipProps) {\n  return (\n    <Tooltip title={tooltip}>\n      <Icon\n        type={type}\n        style={{ color: color, fontSize: \"20px\", margin: \"2px\" }}\n      />\n    </Tooltip>\n  );\n}\n\nfunction findCountry(code: string): string {\n  const country = countries.find(country => country.Code === code);\n  return country ? country.Name : \"\";\n}\n\nfunction TableViewFeatures({ unit }: Props) {\n  return (\n    <div>\n      {unit.country && (\n        <Countries>\n          {unit.country.map(c => (\n            <Tooltip key={c} title={`Available only in ${findCountry(c)}`}>\n              <Tag>{c}</Tag>\n            </Tooltip>\n          ))}\n        </Countries>\n      )}\n      {unit.isExternal ? (\n        <IconWithTooltip type=\"link\" color=\"green\" tooltip=\"External link\" />\n      ) : (\n        <IconWithTooltip type=\"link\" color=\"blue\" tooltip=\"Internal link\" />\n      )}\n      {unit.launchOn ? (\n        <IconWithTooltip\n          type=\"clock-circle\"\n          color=\"green\"\n          tooltip={`Launch date: ${unit.launchOn}`}\n        />\n      ) : (\n        <IconWithTooltip\n          type=\"clock-circle\"\n          color=\"gray\"\n          tooltip=\"No special launch date\"\n        />\n      )}\n      {unit.disableOnSearch ? (\n        <IconWithTooltip\n          type=\"search\"\n          color=\"red\"\n          tooltip=\"Unit disabled on search\"\n        />\n      ) : (\n        <IconWithTooltip\n          type=\"search\"\n          color=\"green\"\n          tooltip=\"Unit enabled on search\"\n        />\n      )}\n      {unit.disableOnPage ? (\n        <IconWithTooltip\n          type=\"read\"\n          color=\"red\"\n          tooltip=\"Unit disabled on articles\"\n        />\n      ) : (\n        <IconWithTooltip\n          type=\"read\"\n          color=\"green\"\n          tooltip=\"Unit enabled on articles\"\n        />\n      )}\n      {unit.onlyOnIOS && (\n        <IconWithTooltip\n          type=\"apple\"\n          color=\"red\"\n          tooltip=\"Unit visible only on iOS\"\n        />\n      )}\n      {unit.onlyOnAndroid && (\n        <IconWithTooltip\n          type=\"android\"\n          color=\"red\"\n          tooltip=\"Unit visible only on Andorid\"\n        />\n      )}\n    </div>\n  );\n}\n\nexport default TableViewFeatures;\n","import React from \"react\";\nimport {\n  Form,\n  Input,\n  Checkbox,\n  DatePicker,\n  Button,\n  InputNumber,\n  Select,\n  message\n} from \"antd\";\nimport { FormComponentProps } from \"antd/lib/form\";\nimport moment from \"moment\";\nimport { Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport AffiliateUnit from \"../models/AffiliateUnit\";\nimport { unitUpdate, unitAdd } from \"../store/units/actions\";\n\nimport countries from \"./countries.json\";\nimport { AffiliateUnitWithKey } from \"./TableView\";\n\nconst { Option } = Select;\n\ntype Props = FormComponentProps & {\n  unit: AffiliateUnitWithKey;\n  doCloseModal: () => void;\n  doSave: (index: number, unit: AffiliateUnit) => void;\n};\n\nfunction EditUnitForm({ unit, form, doCloseModal, doSave }: Props) {\n  const {\n    getFieldDecorator,\n    getFieldError,\n    isFieldTouched\n  } = form;\n\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 }\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 }\n    }\n  };\n\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0\n      },\n      sm: {\n        span: 16,\n        offset: 8\n      }\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        const newUnit = AffiliateUnit.load(values);\n        if (newUnit) {\n          // manually fix the launchOn, because we're having Moment object here and we want string\n          if (values.launchOn) newUnit.launchOn = values.launchOn.format(\"YYYY-MM-DD\\THH:mm:ss\\Z\");\n          // save it\n          doSave(unit.key, newUnit);\n          doCloseModal();\n        } else {\n          message.error(\"Error saving unit\");\n        }\n      } else {\n          message.error(\"Errors validating unit\");\n        }\n    });\n  };\n\n  const campaignError = isFieldTouched(\"campaign\") && getFieldError(\"campaign\");\n  const categoryError = isFieldTouched(\"category\") && getFieldError(\"category\");\n  const imageError = isFieldTouched(\"image\") && getFieldError(\"image\");\n  const headingError = isFieldTouched(\"heading\") && getFieldError(\"heading\");\n  const subheadingError =\n    isFieldTouched(\"subheading\") && getFieldError(\"subheading\");\n  const linkError = isFieldTouched(\"link\") && getFieldError(\"link\");\n\n  return (\n    <Form {...formItemLayout} onSubmit={handleSubmit}>\n      <Form.Item\n        label=\"Campaign\"\n        validateStatus={campaignError ? \"error\" : \"\"}\n        help={campaignError || \"\"}\n      >\n        {getFieldDecorator(\"campaign\", {\n          initialValue: unit.campaign,\n          rules: [{ required: true, message: \"Please input campaign!\" }]\n        })(<Input />)}\n      </Form.Item>\n      <Form.Item\n        label=\"Category\"\n        validateStatus={categoryError ? \"error\" : \"\"}\n        help={categoryError || \"\"}\n      >\n        {getFieldDecorator(\"category\", {\n          initialValue: unit.category,\n          rules: [{ required: true, message: \"Please input category!\" }]\n        })(<Input />)}\n      </Form.Item>\n      <Form.Item\n        label=\"Image\"\n        validateStatus={imageError ? \"error\" : \"\"}\n        help={imageError || \"\"}\n      >\n        {getFieldDecorator(\"image\", {\n          initialValue: unit.image,\n          rules: [{ required: true, message: \"Please input image!\" }]\n        })(<Input />)}\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout}>\n        {getFieldDecorator(\"isBig\", {\n          initialValue: unit.isBig,\n          valuePropName: \"checked\"\n        })(<Checkbox>This is a big affiliate unit</Checkbox>)}\n      </Form.Item>\n      <Form.Item\n        label=\"Heading\"\n        validateStatus={headingError ? \"error\" : \"\"}\n        help={headingError || \"\"}\n      >\n        {getFieldDecorator(\"heading\", {\n          initialValue: unit.heading,\n          rules: [{ required: true, message: \"Please input heading!\" }]\n        })(<Input />)}\n      </Form.Item>\n      <Form.Item\n        label=\"Subheading\"\n        validateStatus={subheadingError ? \"error\" : \"\"}\n        help={subheadingError || \"\"}\n      >\n        {getFieldDecorator(\"subheading\", {\n          initialValue: unit.subheading,\n          rules: [{ required: true, message: \"Please input subheading!\" }]\n        })(<Input />)}\n      </Form.Item>\n      <Form.Item\n        label=\"Link\"\n        validateStatus={linkError ? \"error\" : \"\"}\n        help={linkError || \"\"}\n      >\n        {getFieldDecorator(\"link\", {\n          initialValue: unit.link,\n          rules: [{ required: true, message: \"Please input link!\" }]\n        })(<Input />)}\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout}>\n        {getFieldDecorator(\"isExternal\", {\n          initialValue: unit.isExternal,\n          valuePropName: \"checked\"\n        })(<Checkbox>Link is external</Checkbox>)}\n      </Form.Item>\n      <Form.Item\n        label=\"Tagline\"\n      >\n        {getFieldDecorator(\"tagline\", {\n          initialValue: unit.tagline,\n        })(<Input placeholder=\"Optional special tagline\" />)}\n      </Form.Item>\n      <Form.Item label=\"Exclusive countries\">\n        {getFieldDecorator('country', {\n          initialValue: unit.country,\n        })(\n          <Select mode=\"multiple\" placeholder=\"Countries that the unit appear in\">\n            {countries.map(c => (\n              <Option key={c.Code} value={c.Code}>{c.Name}</Option>\n            ))}\n          </Select>,\n        )}\n      </Form.Item>\n      <Form.Item label=\"Launch\">\n        {getFieldDecorator(\"launchOn\", {\n          initialValue: unit.launchOn && moment.utc(unit.launchOn, \"YYYY-MM-DDTHH:mm:ssZ\", true),\n        })(<DatePicker format=\"YYYY-MM-DD\\THH:mm:ss\\Z\" showTime />)}\n        <span className=\"ant-form-text\">&nbsp;(UTC timezone)</span>\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout}>\n        {getFieldDecorator(\"disableOnSearch\", {\n          initialValue: unit.disableOnSearch,\n          valuePropName: \"checked\"\n        })(<Checkbox>Disable unit on search</Checkbox>)}\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout}>\n        {getFieldDecorator(\"disableOnPage\", {\n          initialValue: unit.disableOnPage,\n          valuePropName: \"checked\"\n        })(<Checkbox>Disable unit on page</Checkbox>)}\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout}>\n        {getFieldDecorator(\"onlyOnIOS\", {\n          initialValue: unit.onlyOnIOS,\n          valuePropName: \"checked\"\n        })(<Checkbox>Display unit only on iOS devices</Checkbox>)}\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout}>\n        {getFieldDecorator(\"onlyOnAndroid\", {\n          initialValue: unit.onlyOnAndroid,\n          valuePropName: \"checked\"\n        })(<Checkbox>Display unit only on Android devices</Checkbox>)}\n      </Form.Item>\n      <Form.Item label=\"Priority\">\n        {getFieldDecorator('priority', {\n          initialValue: unit.priority,\n        })(<InputNumber min={1} max={100} />)}\n      </Form.Item>\n      <Form.Item label=\"Preferred index\">\n        {getFieldDecorator('preferredIndex', {\n          initialValue: unit.preferredIndex,\n        })(<InputNumber min={0} max={2} />)}\n        <span className=\"ant-form-text\"> on the search page</span>\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nconst EditForm = Form.create<Props>({ name: \"unit_form\" })(EditUnitForm);\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  doSave: (index: number, unit: AffiliateUnit) => {\n    if (index > -1) {\n      message.success(\"Unit saved\");\n      dispatch(unitUpdate(index, unit));\n    } else {\n      message.success(\"Unit added\");\n      dispatch(unitAdd(unit));\n    }\n  }\n});\n\nexport default connect(null, mapDispatchToProps)(EditForm);\n","import React from \"react\";\nimport { Modal } from \"antd\";\n\nimport EditUnitForm from \"./EditUnitForm\";\nimport { AffiliateUnitWithKey } from \"./TableView\";\n\ntype Props = {\n  onClose: () => void;\n  unit?: AffiliateUnitWithKey;\n};\n\nfunction EditUnitModal({ onClose, unit }: Props) {\n  const currentUnit = typeof unit === \"undefined\" ? AffiliateUnitWithKey.empty() : unit;\n\n  return (\n    <Modal\n      title={unit ? \"Edit unit\" : \"Create new unit\"}\n      visible={true}\n      footer={null}\n      onCancel={() => onClose()}\n    >\n      <EditUnitForm unit={currentUnit} doCloseModal={onClose} />\n    </Modal>\n  );\n}\n\nexport default EditUnitModal;\n","import React from \"react\";\nimport { Tooltip, Button, message, Popconfirm } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport { unitRemove } from \"../store/units/actions\";\n\nimport { AffiliateUnitWithKey } from \"./TableView\";\nimport EditUnitModal from \"./EditUnitModal\";\n\ntype Props = {\n  unit: AffiliateUnitWithKey;\n  doRemove: (index: number) => void;\n};\n\nfunction TableViewActions({ unit, doRemove }: Props) {\n  const [showModal, setShowModal] = React.useState<boolean>(false);\n\n  function doCancel() {\n    message.error(\"Unit not deleted\");\n  }\n\n  return (\n    <React.Fragment>\n      <Button.Group>\n        <Tooltip title=\"Edit\">\n          <Button\n            shape=\"circle\"\n            icon=\"edit\"\n            type=\"primary\"\n            onClick={() => setShowModal(true)}\n          />\n        </Tooltip>\n        <Tooltip title=\"Delete\">\n          <Popconfirm\n            title=\"Confirm deletion of this unit\"\n            onConfirm={() => doRemove(unit.key)}\n            onCancel={doCancel}\n            okText=\"DELETE\"\n            cancelText=\"Cancel\"\n          >\n            <Button shape=\"circle\" icon=\"delete\" type=\"danger\" />\n          </Popconfirm>\n        </Tooltip>\n      </Button.Group>\n      {showModal && <EditUnitModal unit={unit} onClose={() => setShowModal(false)} />}\n    </React.Fragment>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  doRemove: (index: number) => {\n    message.success(\"Unit deleted\");\n    dispatch(unitRemove(index));\n  }\n});\n\nexport default connect(null, mapDispatchToProps)(TableViewActions);\n","import React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { PageHeader, Alert, Table, Icon, Tooltip, Button } from \"antd\";\nimport { ColumnProps } from \"antd/es/table\";\n\nimport AffiliateUnit from \"../models/AffiliateUnit\";\nimport { AppState } from \"../store/store\";\nimport { setJsonMode } from \"../store/user/actions\";\n\nimport TableViewImage from \"./TableViewImage\";\nimport TableViewDetails from \"./TableViewDetails\";\nimport TableViewFeatures from \"./TableViewFeatures\";\nimport TableViewActions from \"./TableViewActions\";\nimport EditUnitModal from \"./EditUnitModal\";\n\ntype Props = {\n  doExport: () => void;\n  units?: AffiliateUnit[];\n};\n\nexport class AffiliateUnitWithKey extends AffiliateUnit {\n  key: number = -1;\n  static empty(): AffiliateUnitWithKey {\n    return new AffiliateUnitWithKey();\n  }\n};\n\nfunction TableView({ units, doExport }: Props) {\n  const [showModal, setShowModal] = React.useState<boolean>(false);\n\n  let data: AffiliateUnitWithKey[] = [];\n\n  // add `key` prop and juggle the types a bit\n  if (units && units.length > 0) {\n    data = units.map((unit, key) => ({\n      ...unit,\n      key\n    })) as AffiliateUnitWithKey[];\n  }\n\n  const columns: ColumnProps<AffiliateUnitWithKey>[] = [\n    {\n      title: \"Campaign and catgory\",\n      key: \"cc\",\n      render: (text: any, record: AffiliateUnitWithKey) => (\n        <span>\n          <Tooltip placement=\"topLeft\" title=\"Campaign\">\n            {record.campaign}\n          </Tooltip>\n          &nbsp;/&nbsp;\n          <Tooltip placement=\"topLeft\" title=\"Category\">\n            {record.category}\n          </Tooltip>\n        </span>\n      )\n    },\n    {\n      title: \"Big\",\n      key: \"isbig\",\n      render: (text: any, record: AffiliateUnitWithKey) =>\n        record.isBig ? (\n          <Tooltip title=\"Big unit\">\n            <Icon type=\"check\" />\n          </Tooltip>\n        ) : null,\n      width: \"55px\"\n    },\n    {\n      title: \"Image\",\n      key: \"image\",\n      render: (text: any, record: AffiliateUnitWithKey) => (\n        <TableViewImage src={record.image} alt=\"\" />\n      ),\n      width: \"55px\"\n    },\n    {\n      title: \"Unit\",\n      key: \"unit\",\n      render: (text: any, record: AffiliateUnitWithKey) => (\n        <TableViewDetails unit={record} />\n      )\n      // sorter: (a: AffiliateUnit, b: AffiliateUnit) =>\n      //   a.category.length - b.category.length\n    },\n    {\n      title: \"Features\",\n      key: \"features\",\n      render: (text: any, record: AffiliateUnitWithKey) => (\n        <TableViewFeatures unit={record} />\n      )\n    },\n    {\n      title: \"Actions\",\n      key: \"actions\",\n      render: (text: any, record: AffiliateUnitWithKey) => (\n        <TableViewActions unit={record} />\n      ),\n      width: \"100px\"\n    }\n  ];\n\n  return (\n    <PageHeader\n      ghost={false}\n      title={`Affiliate Units (${data.length})`}\n      extra={[\n        <Button key=\"add\" type=\"primary\" icon=\"plus\" onClick={() => setShowModal(true)}>\n          Add unit\n        </Button>,\n        <Button key=\"export\" icon=\"export\" onClick={doExport}>\n          Export JSON\n        </Button>\n      ]}\n    >\n      {(!units || units.length === 0) ? (\n        <Alert message=\"No units available\" type=\"error\" />\n      ) : (\n        <Table<AffiliateUnitWithKey>\n          dataSource={data}\n          columns={columns}\n          pagination={false}\n          />\n      )}\n      {showModal && <EditUnitModal onClose={() => setShowModal(false)} />}\n    </PageHeader>\n  );\n}\n\nconst mapStateToProps = (state: AppState): Partial<Props> => ({\n  units: state.units,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  doExport: () => {\n    dispatch(setJsonMode());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableView);\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../store/store\";\nimport User from \"../models/User\";\n\nimport Menu from \"./Menu\";\nimport JsonView from \"./JsonView\";\nimport TableView from \"./TableView\";\n\nconst { Header, Content } = Layout;\n\ntype Props = {\n  user?: User;\n};\n\nfunction App({ user }: Props) {\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <Menu />\n      </Header>\n      <Content style={{ padding: \"0 50px\" }}>\n        <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n          {user.isJsonMode() && <JsonView />}\n          {user.isTableMode() && <TableView />}\n        </div>\n      </Content>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state: AppState): Partial<Props> => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import { Action } from 'redux';\n\nimport {\n  UnitsStore,\n  initialState,\n  loadStoreFromJson,\n  UnitsActions,\n  UNIT_ADD,\n  UNIT_UPDATE,\n  UNIT_REMOVE,\n  LOAD_UNITS,\n  UnitAddAction,\n  UnitRemoveAction,\n  UnitUpdateAction,\n  LoadUnitsAction,\n} from './types';\n\n\nfunction unitsReducer(state: UnitsStore = initialState, action: UnitsActions | Action): UnitsStore {\n  const newState = state.slice();\n\n  switch (action.type) {\n    case UNIT_ADD: {\n      const { payload: { unit } } = action as UnitAddAction;\n      newState.push(unit);\n      return newState;\n    }\n    case UNIT_UPDATE: {\n      const { payload: { index, unit } } = action as UnitUpdateAction;\n      newState[index] = unit;\n      return newState;\n    }\n    case UNIT_REMOVE: {\n      const { payload: { index } } = action as UnitRemoveAction;\n      newState.splice(index, 1);\n      return newState;\n    }\n    case LOAD_UNITS: {\n      const { payload: { json } } = action as LoadUnitsAction;\n      return loadStoreFromJson(json);\n    }\n    default:\n      return newState;\n  }\n}\n\nexport default unitsReducer;\n","import { Action } from 'redux';\n\nimport {\n  UserStore,\n  initialState,\n  UserActions,\n  MODE_CHANGE,\n  ModeChangeAction,\n} from './types';\n\n\nfunction userReducer(state: UserStore = initialState, action: UserActions | Action): UserStore {\n  const newState = Object.assign(Object.create(state), state);\n\n  switch (action.type) {\n    case MODE_CHANGE: {\n      const { payload: { mode } } = action as ModeChangeAction;\n      newState.mode = mode;\n      return newState;\n    }\n    default:\n      return newState;\n  }\n}\n\nexport default userReducer;\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\n\nimport unitsReducer from \"./units/reducer\";\nimport userReducer from \"./user/reducer\";\n\nconst combinedReducer = combineReducers({\n  units: unitsReducer,\n  user: userReducer,\n});\n\n// not used for now\nconst middleware: any = [];\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  combinedReducer,\n  {},\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport type AppState = ReturnType<typeof combinedReducer>;\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./components/App\";\nimport store from \"./store/store\";\n\nimport \"./index.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}